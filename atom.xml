<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HiYong</title>
  <icon>https://hiyongz.github.io/icon.png</icon>
  <subtitle>此时 此地 此身</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hiyongz.github.io/"/>
  <updated>2021-09-12T09:35:31.956Z</updated>
  <id>https://hiyongz.github.io/</id>
  
  <author>
    <name>HiYo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux Bash编程：随机数生成、对浮点数进行四舍五入运算</title>
    <link href="https://hiyongz.github.io/posts/linux-shell-bash-generate-random-numbers/"/>
    <id>https://hiyongz.github.io/posts/linux-shell-bash-generate-random-numbers/</id>
    <published>2021-09-09T04:02:00.000Z</published>
    <updated>2021-09-12T09:35:31.956Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍使用shell实现随机数生成以及对浮点数进行四舍五入运算&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hiyongz.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://hiyongz.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Go语言中的字符串拼接方法介绍</title>
    <link href="https://hiyongz.github.io/posts/golang-notes-for-string-concatenation/"/>
    <id>https://hiyongz.github.io/posts/golang-notes-for-string-concatenation/</id>
    <published>2021-09-07T04:12:00.000Z</published>
    <updated>2021-09-12T09:36:39.323Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍Go语言中的string类型、strings包和bytes.Buffer类型，介绍几种字符串拼接方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="编程语言" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Go" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/"/>
    
    
      <category term="Go" scheme="https://hiyongz.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Linux Bash编程二：shell语法及实用技巧</title>
    <link href="https://hiyongz.github.io/posts/linux-shell-bash-programing2/"/>
    <id>https://hiyongz.github.io/posts/linux-shell-bash-programing2/</id>
    <published>2021-08-31T04:02:00.000Z</published>
    <updated>2021-09-05T07:33:29.310Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;https://blog.csdn.net/u010698107/article/details/112254528&quot;&gt;Linux Bash编程&lt;/a&gt;中，介绍了Bash编程基本语法，本文记录一下Bash编程中使用到的相关shell 语法技巧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hiyongz.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://hiyongz.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Go语言基础语法（二）：函数</title>
    <link href="https://hiyongz.github.io/posts/golang-notes-for-basic-syntax-function/"/>
    <id>https://hiyongz.github.io/posts/golang-notes-for-basic-syntax-function/</id>
    <published>2021-08-26T04:12:00.000Z</published>
    <updated>2021-09-05T07:34:06.952Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;函数是一等（first-class）公民，可用来封装代码。在&lt;a href=&quot;https://blog.csdn.net/u010698107/article/details/119741912&quot;&gt;Go语言基础语法（一）&lt;/a&gt;中介绍了函数也是一种数据类型，函数的值也可以在其他函数间传递、赋予变量、做类型判断和转换等。下面来介绍Go语言中的函数定义和使用方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="编程语言" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Go" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/"/>
    
    
      <category term="Go" scheme="https://hiyongz.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>使用samba实现linux和windows文件共享</title>
    <link href="https://hiyongz.github.io/posts/linux-tools-for-samba/"/>
    <id>https://hiyongz.github.io/posts/linux-tools-for-samba/</id>
    <published>2021-08-24T04:12:00.000Z</published>
    <updated>2021-08-25T23:12:48.726Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Samba是用于Linux/Unix系统与Windows之间共享文件的软件，本文记录一下Samba的安装及使用方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hiyongz.github.io/categories/Linux/"/>
    
    
      <category term="samba" scheme="https://hiyongz.github.io/tags/samba/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记 | 神们自己</title>
    <link href="https://hiyongz.github.io/posts/reading-notes-for-the-gods-themselves/"/>
    <id>https://hiyongz.github.io/posts/reading-notes-for-the-gods-themselves/</id>
    <published>2021-08-22T10:26:00.000Z</published>
    <updated>2021-08-22T08:53:32.972Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;《神们自己》是艾萨克·阿西莫夫（Isaac Asimov）于1972年创作的科幻小说，获得了1972年星云奖最佳小说奖和1973年雨果奖最佳小说奖。&lt;br&gt;
    
    </summary>
    
    
      <category term="阅读" scheme="https://hiyongz.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="读书笔记" scheme="https://hiyongz.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Go语言基础语法（一）</title>
    <link href="https://hiyongz.github.io/posts/golang-notes-basic-syntax/"/>
    <id>https://hiyongz.github.io/posts/golang-notes-basic-syntax/</id>
    <published>2021-08-17T04:12:00.000Z</published>
    <updated>2021-08-21T02:29:50.926Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍一些Go语言的基础语法。&lt;br&gt;
    
    </summary>
    
    
      <category term="编程语言" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Go" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/"/>
    
    
      <category term="Go" scheme="https://hiyongz.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go语言开发环境安装</title>
    <link href="https://hiyongz.github.io/posts/golang-notes-for-install-guide/"/>
    <id>https://hiyongz.github.io/posts/golang-notes-for-install-guide/</id>
    <published>2021-08-12T04:12:00.000Z</published>
    <updated>2021-08-12T14:21:52.881Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Go语言（Golang） 由Google 的 Robert Griesemer，Rob Pike 和 Ken Thompson 推出，Go语言具有并发性，可以快速编译机器码，自动垃圾回收，是一种静态强类型、编译型语言。由于Go语言的并发特性，非常适用于Web 服务器、分布式集群计算、云计算、游戏服务端等的开发。在区块链（如以太坊，Ethereum）、容器（如Kubernetes）领域都有广泛的应用。本文介绍Go语言开发环境安装方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="编程语言" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Go" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/"/>
    
    
      <category term="Go" scheme="https://hiyongz.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Windows上实现iOS APP自动化测试：tidevice + WDA +  facebook-wda / appium</title>
    <link href="https://hiyongz.github.io/posts/app-testing-for-ios-app-on-windows/"/>
    <id>https://hiyongz.github.io/posts/app-testing-for-ios-app-on-windows/</id>
    <published>2021-08-10T04:12:00.000Z</published>
    <updated>2021-08-22T10:29:23.002Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍如何在Windows下构建iOS APP自动化测试环境，采用的主要工具为tidevice，WebDriverAgent，facebook-wda或者appium。&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动化测试" scheme="https://hiyongz.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="App自动化测试" scheme="https://hiyongz.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/App%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="iOS" scheme="https://hiyongz.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记 | 影响力</title>
    <link href="https://hiyongz.github.io/posts/reading-notes-for-the-influence-the-psychology-of-persuasion/"/>
    <id>https://hiyongz.github.io/posts/reading-notes-for-the-influence-the-psychology-of-persuasion/</id>
    <published>2021-08-08T04:22:00.000Z</published>
    <updated>2021-08-07T12:19:56.571Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;《影响力》是心理学家罗伯特·西奥迪尼的经典著作，列举了6个影响力武器，在我们周围经常能感受到它所发挥的威力。特别是在销售上，现在生活资料如此丰富，还有各种网络服务，商家为了提升利润，他们采用了各种营销手段，目的就是希望我们选择他们的产品，某些手段正是利用人类心理上的特点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="阅读" scheme="https://hiyongz.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="读书笔记" scheme="https://hiyongz.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>配置Linux主机名</title>
    <link href="https://hiyongz.github.io/posts/linux-vm-name-and-hostname/"/>
    <id>https://hiyongz.github.io/posts/linux-vm-name-and-hostname/</id>
    <published>2021-08-05T04:02:00.000Z</published>
    <updated>2021-08-07T08:05:52.333Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;为了方便区分局域网中的多个Linux主机，可以为每台机器设置主机名，本文介绍hostname配置方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hiyongz.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://hiyongz.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Android手机管理平台搭建：STF和atxserver2</title>
    <link href="https://hiyongz.github.io/posts/app-testing-for-stf-platform/"/>
    <id>https://hiyongz.github.io/posts/app-testing-for-stf-platform/</id>
    <published>2021-08-03T04:12:00.000Z</published>
    <updated>2021-08-04T13:22:13.499Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;STF（Smartphone Test Farm）是一个Android手机设备管理平台，通过在浏览器上远程调试智能手机、手表和其它设备，一般用于远程管理、调试、监控多个设备。atxserver2移动设备管理平台支持支持Android和iOS，它也使用到了STF。本文介绍如何使用两个工具来搭建Android手机管理平台。&lt;br&gt;目录&lt;br&gt;[toc]&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动化测试" scheme="https://hiyongz.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="App自动化测试" scheme="https://hiyongz.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/App%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="stf" scheme="https://hiyongz.github.io/tags/stf/"/>
    
  </entry>
  
  <entry>
    <title>文章导航</title>
    <link href="https://hiyongz.github.io/posts/blog-navigation/"/>
    <id>https://hiyongz.github.io/posts/blog-navigation/</id>
    <published>2021-08-03T04:12:00.000Z</published>
    <updated>2021-08-02T23:36:05.474Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;文章导航&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>读书笔记 | 你是你自己注意力的主人吗？</title>
    <link href="https://hiyongz.github.io/posts/reading-notes-for-the-attention-merchants/"/>
    <id>https://hiyongz.github.io/posts/reading-notes-for-the-attention-merchants/</id>
    <published>2021-08-02T04:22:00.000Z</published>
    <updated>2021-08-22T08:37:48.216Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;《注意力经济：如何把大众的注意力变成生意》看了有一段时间了，这本书大致梳理了美国的商业广告发展轨迹，注意力商人是如何收割大众的注意力、利用注意力以及转售注意力的。&lt;/p&gt;
&lt;p&gt;如果我们将注意力当作一种资源，或者一种货币，我们不可避免地要去“消费”它，总会在某些事物上集中注意力。与实体的资源不同的是，这种资源是无法存下来以备未来之需，它随时产生，随时消耗。那么问题就在于，我应该将注意力集中到什么上？&lt;/p&gt;
    
    </summary>
    
    
      <category term="阅读" scheme="https://hiyongz.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="读书笔记" scheme="https://hiyongz.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用SCP或Rsync实现Linux主机之间文件、目录的复制</title>
    <link href="https://hiyongz.github.io/posts/linux-copying-files-using-scp-or-rsync/"/>
    <id>https://hiyongz.github.io/posts/linux-copying-files-using-scp-or-rsync/</id>
    <published>2021-07-29T04:02:00.000Z</published>
    <updated>2021-08-02T12:22:07.345Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我们知道Linux本机的文件拷贝可以使用&lt;code&gt;cp&lt;/code&gt;命令，它不能在Linux主机之间拷贝数据。本文介绍SCP和Rsync这两种实现Linux主机间的数据拷贝工具。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hiyongz.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://hiyongz.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>配置多台服务器之间ssh免密登录</title>
    <link href="https://hiyongz.github.io/posts/linux-password-less-ssh-login-for-multiple-remote-servers/"/>
    <id>https://hiyongz.github.io/posts/linux-password-less-ssh-login-for-multiple-remote-servers/</id>
    <published>2021-07-27T04:02:00.000Z</published>
    <updated>2021-08-02T12:06:46.591Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;使用scp 或者 rsync命令在多台Linux服务器之间同步文件时需要输入密码，除了使用expect实现自动化交互以外，还有一种方法就是配置服务器之间ssh免密登录，本文记录一下具体配置过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hiyongz.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://hiyongz.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Python内存驻留机制</title>
    <link href="https://hiyongz.github.io/posts/python-notes-for-string-interning/"/>
    <id>https://hiyongz.github.io/posts/python-notes-for-string-interning/</id>
    <published>2021-07-22T04:12:00.000Z</published>
    <updated>2021-07-22T14:10:10.077Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;字符串驻留机制在许多面向对象编程语言中都支持，比如Java、python、Ruby、PHP等，它是一种数据缓存机制，对不可变数据类型使用同一个内存地址，有效的节省了空间，本文主要介绍Python的内存驻留机制。&lt;/p&gt;
    
    </summary>
    
    
      <category term="编程语言" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="python" scheme="https://hiyongz.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/"/>
    
    
      <category term="Python" scheme="https://hiyongz.github.io/tags/Python/"/>
    
      <category term="内存驻留" scheme="https://hiyongz.github.io/tags/%E5%86%85%E5%AD%98%E9%A9%BB%E7%95%99/"/>
    
  </entry>
  
  <entry>
    <title>Linux和Windows创建指定大小文件方法</title>
    <link href="https://hiyongz.github.io/posts/linux-and-windows-create-files-certain-size/"/>
    <id>https://hiyongz.github.io/posts/linux-and-windows-create-files-certain-size/</id>
    <published>2021-07-20T04:02:00.000Z</published>
    <updated>2021-07-22T14:09:24.129Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在测试中有时需要创建不同大小的测试文件，用于测试上传下载性能以及以及其它文件传输功能，本文介绍几种Liunx和Windows系统下创建指定大小文件的方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hiyongz.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://hiyongz.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>黑苹果安装笔记</title>
    <link href="https://hiyongz.github.io/posts/macos-bigsur-hackintosh-installation-tutorial/"/>
    <id>https://hiyongz.github.io/posts/macos-bigsur-hackintosh-installation-tutorial/</id>
    <published>2021-07-17T04:12:00.000Z</published>
    <updated>2021-08-12T22:35:00.544Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文记录黑苹果安装过程&lt;/p&gt;
    
    </summary>
    
    
      <category term="其它" scheme="https://hiyongz.github.io/categories/%E5%85%B6%E5%AE%83/"/>
    
    
      <category term="iOS" scheme="https://hiyongz.github.io/tags/iOS/"/>
    
      <category term="黑苹果" scheme="https://hiyongz.github.io/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>App自动化测试工具Uiautomator2</title>
    <link href="https://hiyongz.github.io/posts/app-testing-tools-for-uiautomator2/"/>
    <id>https://hiyongz.github.io/posts/app-testing-tools-for-uiautomator2/</id>
    <published>2021-07-15T04:12:00.000Z</published>
    <updated>2021-08-02T12:38:18.615Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://developer.android.com/training/testing/ui-automator.html&quot;&gt;UI Automator&lt;/a&gt;是 google 在 Android4.1 版本发布时推出的一款用Java编写的Android UI 自动化测试工具，基于Android Accessibility 服务，Accessibility 服务用于帮助残疾用户使用Android设备和应用。在后台运行，并在accesbilityevents触发时接收系统回调。&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动化测试" scheme="https://hiyongz.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="App自动化测试" scheme="https://hiyongz.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/App%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Uiautomator2" scheme="https://hiyongz.github.io/tags/Uiautomator2/"/>
    
  </entry>
  
</feed>
